<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Back End on Harker Development Docs</title>
    <link>https://harkerdev.github.io/docs/back-end/</link>
    <description>Recent content in Back End on Harker Development Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Oct 2018 01:10:35 -0500</lastBuildDate>
    
	<atom:link href="https://harkerdev.github.io/docs/back-end/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access MongoDB with MongoDB Compass</title>
      <link>https://harkerdev.github.io/docs/back-end/mongodb-access-with-compass/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://harkerdev.github.io/docs/back-end/mongodb-access-with-compass/</guid>
      <description>HarkerDev projects often (if not always) use MongoDB as the main database system. This guide will explain how to use MongoDB&amp;rsquo;s GUI to access the database directly.
Installing MongoDB Compass MongoDB First, make sure that mongodb is installed and running mongod on the device you wish to connect to. This setup is detailed in our guide on [[Setting Up a Server|https://harkerdev.github.io/backend/setting-up-a-server]].
Compass Then, [[install MongoDB Compass|https://www.mongodb.com/download-center?filter=enterprise#compass]] on the device you are using to connect.</description>
    </item>
    
    <item>
      <title>Populate Database w/ Test Files</title>
      <link>https://harkerdev.github.io/docs/back-end/test-files-database/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://harkerdev.github.io/docs/back-end/test-files-database/</guid>
      <description>Testing often requires a populated database to work with. This tutorial explains how to write a write scripts which populate the database with test documents specified in files you will create.
Setup Make sure that MongoDB is set up and mongod is running. Review the structure of your collections. For this tutorial, we will be using users as our example, with the following schema:
const mongoose = require(&amp;#39;../db&amp;#39;); // Format of the mongoDB collection const userSchema = mongoose.</description>
    </item>
    
    <item>
      <title>Setting Up A Server</title>
      <link>https://harkerdev.github.io/docs/back-end/setting-up-a-server/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://harkerdev.github.io/docs/back-end/setting-up-a-server/</guid>
      <description>You&amp;rsquo;ll be writing code for two different environments: development and production. The production environment is the server. The stuff on it should be free of errors, and ideally you don&amp;rsquo;t want to be testing anything in production. The development environment is what you run on your machine. You should ideally test your changes in your development environment before deploying them to production.
Development Because you&amp;rsquo;ll be the only one testing the application locally on your computer (or maybe somehow you could involve a few others), it is enough to only utilize one core of your machine and not worry about the application&amp;rsquo;s response to load.</description>
    </item>
    
    <item>
      <title>MongoDB Backup</title>
      <link>https://harkerdev.github.io/docs/back-end/mongodb-backup/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://harkerdev.github.io/docs/back-end/mongodb-backup/</guid>
      <description>The more backups there are, the better. Thankfully, because of GitHub, we have multiple backups of the code in addition to the code on the server and on our own computers. However, MongoDB needs more work to set up for backups. This tutorial will guide you on how to make a backup procedure for MongoDB.
Local Backup A local backup is helpful because data can become corrupted or maliciously manipulated while in production.</description>
    </item>
    
  </channel>
</rss>